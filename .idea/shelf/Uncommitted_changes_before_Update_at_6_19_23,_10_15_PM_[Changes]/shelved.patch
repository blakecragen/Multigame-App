Index: app/src/main/java/com/example/cs2340Project/wordleGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cs2340Project;\nimport android.animation.AnimatorInflater;\nimport android.animation.ObjectAnimator;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.animation.Animation;\nimport android.view.animation.AnimationUtils;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.GridLayout;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\n\npublic class wordleGame extends AppCompatActivity implements View.OnClickListener {\n    private EditText[][] editTextFields;\n    private Button enterButton;\n    private Button deleteButton;\n    private int currentRow;\n\n    private String answer;\n    private wordleGameFunctionality wordle;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.wordle_game);\n\n        currentRow = 0;\n        wordle = new wordleGameFunctionality();\n        wordle.selectNewWord();\n        answer = wordle.getSolution();\n\n        Button toHome = findViewById(R.id.toMainActivity);\n        toHome.setOnClickListener(v -> finish());\n\n        Button restart = findViewById(R.id.wd_restart_button);\n        restart.setOnClickListener(v -> recreate());\n\n        editTextFields = new EditText[5][5];\n        editTextFields[0][0] = findViewById(R.id.editText1);\n        editTextFields[0][1] = findViewById(R.id.editText2);\n        editTextFields[0][2] = findViewById(R.id.editText3);\n        editTextFields[0][3] = findViewById(R.id.editText4);\n        editTextFields[0][4] = findViewById(R.id.editText5);\n        editTextFields[1][0] = findViewById(R.id.editText6);\n        editTextFields[1][1] = findViewById(R.id.editText7);\n        editTextFields[1][2] = findViewById(R.id.editText8);\n        editTextFields[1][3] = findViewById(R.id.editText9);\n        editTextFields[1][4] = findViewById(R.id.editText10);\n        editTextFields[2][0] = findViewById(R.id.editText11);\n        editTextFields[2][1] = findViewById(R.id.editText12);\n        editTextFields[2][2] = findViewById(R.id.editText13);\n        editTextFields[2][3] = findViewById(R.id.editText14);\n        editTextFields[2][4] = findViewById(R.id.editText15);\n        editTextFields[3][0] = findViewById(R.id.editText16);\n        editTextFields[3][1] = findViewById(R.id.editText17);\n        editTextFields[3][2] = findViewById(R.id.editText18);\n        editTextFields[3][3] = findViewById(R.id.editText19);\n        editTextFields[3][4] = findViewById(R.id.editText20);\n        editTextFields[4][0] = findViewById(R.id.editText21);\n        editTextFields[4][1] = findViewById(R.id.editText22);\n        editTextFields[4][2] = findViewById(R.id.editText23);\n        editTextFields[4][3] = findViewById(R.id.editText24);\n        editTextFields[4][4] = findViewById(R.id.editText25);\n\n        int[] buttonIds = {\n                R.id.buttonA, R.id.buttonB, R.id.buttonC, R.id.buttonD, R.id.buttonE,\n                R.id.buttonF, R.id.buttonG, R.id.buttonH, R.id.buttonI, R.id.buttonJ,\n                R.id.buttonK, R.id.buttonL, R.id.buttonM, R.id.buttonN, R.id.buttonO,\n                R.id.buttonP, R.id.buttonQ, R.id.buttonR, R.id.buttonS, R.id.buttonT,\n                R.id.buttonU, R.id.buttonV, R.id.buttonW, R.id.buttonX, R.id.buttonY, R.id.buttonZ\n        };\n        for (int i = 0; i < buttonIds.length; i++) {\n            Button button = findViewById(buttonIds[i]);\n            button.setOnClickListener(this);\n        }\n\n        for (int row = 0; row < 5; row++) {\n            for (int col = 0; col < 5; col++) {\n                EditText toBeDisabled = editTextFields[row][col];\n                toBeDisabled.setFocusable(false);\n                toBeDisabled.setFocusableInTouchMode(false);\n            }\n        }\n\n        deleteButton = findViewById(R.id.delete);\n        deleteButton.setOnClickListener(this);\n\n        enterButton = findViewById(R.id.enter);\n        enterButton.setOnClickListener(this);\n    }\n\n    public void onClick(View v) {\n        if (v.getId() == R.id.delete) {\n            Button deleteButton = (Button) v;\n            String deleteButtonText = deleteButton.getText().toString();\n            if (deleteButtonText.equals(\"Delete\")) {\n                for (int col = 4; col >= 0; col--) {\n                    EditText editText = editTextFields[currentRow][col];\n                    if (!editText.getText().toString().isEmpty()) {\n                        editText.setText(\"\");\n                        editText.requestFocus();\n                        break;\n                    }\n                }\n            } else {\n                for (int col = 0; col < 5; col++) {\n                    EditText editText = editTextFields[currentRow][col];\n                    if (editText.getText().toString().isEmpty()) {\n                        editText.setText(deleteButtonText);\n                        if (col + 1 < 5) {\n                            editTextFields[currentRow][col + 1].requestFocus();\n                        }\n                        break;\n                    }\n                }\n    }\n        }  else if (v.getId() == R.id.enter) {\n            if (currentRow < 5 && isRowFilled(currentRow)) {\n                String playerGuess = getRowCharacters(currentRow);\n                // Store as lowercase\n                playerGuess = playerGuess.toLowerCase();\n                char[] guess = playerGuess.toCharArray();\n                char[] solution = answer.toCharArray();\n                int counter = 0;\n                // Check if string playerGuess is found in guessList\n                int valid = wordle.checkGuessValid(playerGuess);\n                if (valid != -1) {\n                    // Perform the desired function for the current row\n                    for (int i = 0; i < guess.length; i++) {\n                        if (guess[i] == solution[i]) {\n                            editTextFields[currentRow][counter].setBackgroundResource(R.color.green);\n                        } else if (answer.contains(String.valueOf(guess[i]))) {\n                            editTextFields[currentRow][counter].setBackgroundResource(R.color.purple);\n                        } else {\n                            editTextFields[currentRow][counter].setBackgroundResource(R.color.red);\n                        }\n                        counter++;\n                    }\n\n                    //keep this code in the if statement\n                    //determines whether or not it should go to next row\n                    currentRow++;\n                    if (currentRow < 5) {\n                        editTextFields[currentRow][0].requestFocus();\n                    }\n                } else {\n                    // Add animation\n                    TextView tv = findViewById(R.id.wordleHeading);\n                    Animation animation = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.shake);\n                    tv.startAnimation(animation);\n                }\n\n            }\n        } else if (v.getId() == R.id.wd_restart_button) {\n            recreate();\n        } else {\n            keyboard(v);\n        }\n    }\n\n    private boolean isRowFilled(int row) {\n        for (int col = 0; col < 5; col++) {\n            if (editTextFields[row][col].getText().toString().isEmpty()) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private String getRowCharacters(int row) {\n        StringBuilder rowCharacters = new StringBuilder();\n        for (int col = 0; col < 5; col++) {\n            rowCharacters.append(editTextFields[row][col].getText().toString());\n        }\n        return rowCharacters.toString();\n    }\n\n    private void keyboard(View v) {\n        Button button = (Button) v;\n        String buttonText = button.getText().toString();\n        if (!buttonText.isEmpty()) {\n            for (int col = 0; col < 5; col++) {\n                EditText editText = editTextFields[currentRow][col];\n                if (editText.getText().toString().isEmpty()) {\n                    editText.setText(buttonText);\n                    if (col + 1 < 5) {\n                        editTextFields[currentRow][col + 1].requestFocus();\n                    }\n                    break;\n                }\n            }\n        }\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cs2340Project/wordleGame.java b/app/src/main/java/com/example/cs2340Project/wordleGame.java
--- a/app/src/main/java/com/example/cs2340Project/wordleGame.java	(revision 343139f36afdbb6e63dbd9c44228269aff752c50)
+++ b/app/src/main/java/com/example/cs2340Project/wordleGame.java	(date 1687130530835)
@@ -116,7 +116,7 @@
                         break;
                     }
                 }
-    }
+            }
         }  else if (v.getId() == R.id.enter) {
             if (currentRow < 5 && isRowFilled(currentRow)) {
                 String playerGuess = getRowCharacters(currentRow);
@@ -159,6 +159,7 @@
         } else {
             keyboard(v);
         }
+
     }
 
     private boolean isRowFilled(int row) {
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"deploymentTargetDropDown\">\n    <targetSelectedWithDropDown>\n      <Target>\n        <type value=\"QUICK_BOOT_TARGET\" />\n        <deviceKey>\n          <Key>\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\n            <value value=\"$USER_HOME$/.android/avd/Pixel_3a_API_33_x86_64.avd\" />\n          </Key>\n        </deviceKey>\n      </Target>\n    </targetSelectedWithDropDown>\n    <timeTargetWasSelectedWithDropDown value=\"2023-06-15T20:07:56.347888Z\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision 343139f36afdbb6e63dbd9c44228269aff752c50)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1687129167131)
@@ -7,11 +7,11 @@
         <deviceKey>
           <Key>
             <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="$USER_HOME$/.android/avd/Pixel_3a_API_33_x86_64.avd" />
+            <value value="$USER_HOME$/.android/avd/Pixel_5_API_33.avd" />
           </Key>
         </deviceKey>
       </Target>
     </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2023-06-15T20:07:56.347888Z" />
+    <timeTargetWasSelectedWithDropDown value="2023-06-18T22:59:18.416138Z" />
   </component>
 </project>
\ No newline at end of file
